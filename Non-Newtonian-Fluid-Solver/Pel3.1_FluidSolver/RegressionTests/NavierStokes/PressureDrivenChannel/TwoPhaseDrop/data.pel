MODULE PEL_Application
   
   concrete_name = "FE_StepByStepProgression"
   
   // Fluid Parameters:
   $DS_Re  = 1.
   $DS_Ri  = 10.
   $DS_Bn = 0.
   $DS_n = 1.
   $DS_kappa1 = 5. 	// consistency fluid 1
   $DS_kappa2 = 1. 	// consistency fluid 2
   $DS_rho_r = 0.1 	// density ratio
   $DS_K = 0.0 		// diffusivity
   
   $DV_GRAV = < 0. -1. >
   
   $DS_X = component( $DV_X, 0 )
   $DS_Y = component( $DV_X, 1 )
   
   // Initial values for concentration
   $DS_InitialC = ( in_range( sqrt( sqr( $DS_X - 1. ) + sqr( $DS_Y - 0.5) ), vector( 0., 0.2) ) ? 1. : 0. )
   
   // Time Stepping
   $DS_DT = 0.1
   $DS_TEND = 10.
   $IS_ORDER = 1
   
   // Field Level for time dependent fields
   $IS_CURRENT = 0 // storage of the current field
   $IS_INITIAL = 1 // storage of the preveous field
   $IS_NONLIN  = 2 // storage of the nonlinear contribution + storage for convergence
   // between time steps
   
   $IS_SteadyStateAdaptor = 0 // Apply steady state break critereon
   $IS_Advection = 0 // Consider advection term: 0 false, 1 true
   $IS_Nonlinear = 0 // Consider nonlinear viscosity term: 0 false, 1 true
   
   
   MODULE FE_TimeIterator
      time_initial = 0.0
      time_end = $DS_TEND
      time_step = $DS_DT 
   END MODULE FE_TimeIterator
   
   if( $IS_SteadyStateAdaptor = 1 )
   MODULE FE_TimeIteratorAdapter
      // Stop when :
      //   max( u_current-u_initial )/max( u_current, 1. ) < 1.E-2
      //   max( p_current-p_initial )/max( p_current, 1. ) < 1.E-2
      concrete_name = "FE_SteadyStateAdapter"
      initial_level = $IS_NONLIN
      current_level = $IS_CURRENT
      discrete_fields = < "velocity" "pp" >
      minimal_error = < 1.E-5 1.E-5 >
      MODULE post_processing
         banner = true
         file_name = "convergence.txt"
      END MODULE post_processing
   END MODULE FE_TimeIteratorAdapter
   
   graphics_output_times = regular_vector( 0., 20, $DS_TEND )
   
   
//////////////////////////////////////////////////////////////////
   // PDE_DomainAndFields
//////////////////////////////////////////////////////////////////
   MODULE PDE_DomainAndFields
      verbose_level = 1
      nb_space_dimensions = 2
      type = "finite_element"
      
//////////////////////////////////////////////////////////////
      // Define meshing
      // - no splitting if in sequential mode
      // - automatic splitting using METIS if in true parallel mode
//////////////////////////////////////////////////////////////
      if( nb_ranks() = 1 )
      MODULE GE_Meshing
         concrete_name = "GE_BoxWithBoxes"
         mesh_polyhedron = < "GE_Segment" "GE_Rectangle" >
         vertices_coordinate_1 = regular_vector( 0., 20, 1.0 )
         vertices_coordinate_0 = regular_vector( 0., 50, 2.5 )
      END MODULE GE_Meshing
      
      if( nb_ranks() > 1 )
      MODULE GE_Meshing
         concrete_name = "GE_SplitMeshing"
         //nb_ranks = 4 // necessary ?
         //rank = 2     // necessary ?
         MODULE splitting_strategy
            concrete_name = "EXT_METISsplitting"
         END MODULE splitting_strategy
         security_bandwidth = 1
         MODULE GE_Meshing
            concrete_name = "GE_BoxWithBoxes"
            mesh_polyhedron = < "GE_Segment" "GE_Rectangle" >
            vertices_coordinate_1 = regular_vector( 0., 10, 1.0 )
            vertices_coordinate_0 = regular_vector( 0., 50, 5.0 )
         END MODULE GE_Meshing
      END MODULE GE_Meshing
///////////////////////////////////////////////////////////////////
      
      
      MODULE macro_colors
         symmetry_x = < "left" "right" >
         //symmetry_y = < "bottom" >
         no_slip  = < "top" "bottom" >
      END MODULE macro_colors
      
      MODULE interior_fields
         
         MODULE field#concentration
            name = "CC"
            nb_components = 1
            element_name = "PDE_2D_Q0_1node"
            storage_depth = 2
            MODULE DOFs_values
               type = "uniformly_defined"
               value = vector( $DS_InitialC )
            END MODULE DOFs_values
         END MODULE field#concentration
         
         MODULE uu
            name = "velocity"
            nb_components = 2
            element_name = "PDE_2D_Q1_4nodes"
            storage_depth = 3
            MODULE DOFs_values
               type = "uniformly_defined"
               value = vector( 0.0, 0.0 )
            END MODULE DOFs_values
            MODULE DOFs_imposed_value
               MODULE Dirichlet
                  location = "on_bounds"
                  type = "uniformly_defined"
                  color = "no_slip"
                  value = vector( 0.0, 0.0 )
               END MODULE Dirichlet
               MODULE XSymmetry
                  location = "on_bounds"
                  color = "symmetry_x"
                  component = 1
                  type = "uniformly_defined"
                  value = < 0.0 >
               END MODULE XSymmetry
            END MODULE DOFs_imposed_value
         END MODULE uu
         
         MODULE pp
            name = "pp"
            nb_components = 1
            element_name = "PDE_2D_Q0_1node"
            storage_depth = 3
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0.0 >
            END MODULE DOFs_values
            MODULE DOFs_imposed_value
               MODULE Dirichlet
                  location = "on_bounds"
                  type = "uniformly_defined"
                  color = "symmetry_x"
                  value = vector( 0.0 )
               END MODULE Dirichlet
            END MODULE DOFs_imposed_value
         END MODULE pp
         
      END MODULE interior_fields
      
      MODULE PDE_ResultSaver
         writers = < "PEL_VTKwriter" >
         writing_mode = "text"
         files_basename = "save"
         MODULE uu
            where_to_save = "at_vertices"
            entry_name = "UU"
            field = "velocity"
         END MODULE uu
         MODULE pp
            where_to_save = "at_cell_centers"
            entry_name = "PP"
            field = "pp"
         END MODULE pp
         MODULE cc
            where_to_save = "at_cell_centers"
            entry_name = "CC"
            field = "CC"
         END MODULE cc
      END MODULE PDE_ResultSaver
   END MODULE PDE_DomainAndFields
   
   
///////////////////////////////////////////////////////////////////
   // FE_Parameters
///////////////////////////////////////////////////////////////////
   MODULE FE_SetOfParameters
      alpha = < 1.0 >
      
      sourcePhase = < 0. >
      density = < 1. >
      diffusivityPhase = vector( $DS_K )
      
      MODULE FE_Parameter#Reynolds
         concrete_name = "FE_ConvexParameter"
         name = "Reynolds"
         MODULE list_of_parameters
            MODULE param#c_1
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "c_1"
                  value = < 1. >
               END MODULE FE_Parameter
            END MODULE param#c_1
            MODULE param#c_2
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "c_2"
                  value = vector( $DS_rho_r )
               END MODULE FE_Parameter
            END MODULE param#c_2
            MODULE param#c_s
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "c_s"
                  value = vector( $DS_Re )
               END MODULE FE_Parameter
            END MODULE param#c_s
            MODULE param#lambda
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_FieldParameter"
                  name = "lambda"
                  field_level = 0
                  field_name = "CC"
               END MODULE FE_Parameter
            END MODULE param#lambda
         END MODULE list_of_parameters
      END MODULE FE_Parameter#Reynolds
      
      
      
/////////////////////////////////////////////////////////////////////////////
      // Setup the total external force:
      // - pressuredrop
      // - gravity force
/////////////////////////////////////////////////////////////////////////////
      
      pressuredrop = < 0.5 0. >
      
      MODULE FE_Parameter#Richards
         concrete_name = "FE_ConvexParameter"
         name = "Richards"
         MODULE list_of_parameters
            MODULE param#c_1
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "c_1"
                  value = < 1. >
               END MODULE FE_Parameter
            END MODULE param#c_1
            MODULE param#c_2
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "c_2"
                  value = vector( $DS_rho_r )
               END MODULE FE_Parameter
            END MODULE param#c_2
            MODULE param#c_s
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "c_s"
                  value = vector( $DS_Ri )
               END MODULE FE_Parameter
            END MODULE param#c_s
            MODULE param#lambda
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_FieldParameter"
                  name = "lambda"
                  field_level = 0
                  field_name = "CC"
               END MODULE FE_Parameter
            END MODULE param#lambda
         END MODULE list_of_parameters
      END MODULE FE_Parameter#Richards
      
      MODULE FE_Parameter#Gravity
         concrete_name = "FE_GravityParameter"
         name = "Gravity"
         gravity = $DV_GRAV
         rho_shift = 0.
         rho = "Richards"
      END MODULE FE_Parameter#Gravity
      
      MODULE FE_Parameter#ExternalForce
         concrete_name = "FE_SumOfParameters"
         name = "ExtForce"
         MODULE list_of_parameters
            MODULE param#1
               type = "already_defined"
               name = "Gravity"
               coefficient = 1.
            END MODULE param#1
            MODULE param#2
               type = "already_defined"
               name = "pressuredrop"
               coefficient = 1.
            END MODULE param#2
         END MODULE list_of_parameters
      END MODULE FE_Parameter#ExternalForce
      
///////////////////////////////////////////////////////////////////////////////	
      
/////////////////////////////////////////////////////////////////////////////
      // Viscosity Term
////////////////////////////////////////////////////////////////////////////
      MODULE FE_Parameter#ViscHB1
         concrete_name = "FE_ViscosityHBParameterNew"
         name = "Viscosity1"
         MODULE list_of_parameters
            MODULE param#Bn
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "Bn"
                  value = vector($DS_Bn)
               END MODULE FE_Parameter
            END MODULE param#Bn
            MODULE param#kappa
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "kappa"
                  value = vector($DS_kappa1)
               END MODULE FE_Parameter
            END MODULE param#kappa
            MODULE param#n
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "n"
                  value = vector($DS_n)
               END MODULE FE_Parameter
            END MODULE param#n
            MODULE param#eps
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_SpaceTimeParameter"
                  name = "Reg"
                  nb_components = 1
                  value = vector( 0.0001 )
               END MODULE FE_Parameter
            END MODULE param#eps
         END MODULE list_of_parameters
         reg = "Simple"
         // Link to velocity
         vel_name = "velocity" 	// Link to the velocity field
         vel_level = 0  	// Level of the velocity field 
      END MODULE FE_Parameter#ViscHB1
      
      MODULE FE_Parameter#ViscHB2
         concrete_name = "FE_ViscosityHBParameterNew"
         name = "Viscosity2"
         MODULE list_of_parameters
            MODULE param#Bn
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "Bn"
                  value = vector($DS_Bn)
               END MODULE FE_Parameter
            END MODULE param#Bn
            MODULE param#kappa
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "kappa"
                  value = vector($DS_kappa2)
               END MODULE FE_Parameter
            END MODULE param#kappa
            MODULE param#n
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "n"
                  value = vector($DS_n)
               END MODULE FE_Parameter
            END MODULE param#n
            MODULE param#eps
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_SpaceTimeParameter"
                  name = "Reg"
                  nb_components = 1
                  value = vector( 0.0001 )
               END MODULE FE_Parameter
            END MODULE param#eps
         END MODULE list_of_parameters
         reg="Simple"
         // Link to velocity
         vel_name = "velocity" 	// Link to the velocity field
         vel_level = 0  	// Level of the velocity field 
      END MODULE FE_Parameter#ViscHB2
      
      MODULE FE_Parameter#Viscosity
         concrete_name = "FE_ConvexParameter"
         name = "Viscosity"
         MODULE list_of_parameters
            MODULE param#c_1
               type = "already_defined"
               name = "Viscosity1"
            END MODULE param#c_1
            MODULE param#c_2
               type = "already_defined"
               name = "Viscosity2"
            END MODULE param#c_2
            MODULE param#c_s
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_UniformParameter"
                  name = "c_s"
                  value = < 1. >
               END MODULE FE_Parameter
            END MODULE param#c_s
            MODULE param#lambda
               type = "to_be_defined"
               MODULE FE_Parameter
                  concrete_name = "FE_FieldParameter"
                  name = "lambda"
                  field_level = 0
                  field_name = "CC"
               END MODULE FE_Parameter
            END MODULE param#lambda
         END MODULE list_of_parameters
      END MODULE FE_Parameter#Viscosity
      
///////////////////////////////////////////////////////////////////
      
      MODULE FE_Parameter#secinvgamma
         concrete_name = "FE_DuDuFieldParameter"
         name = "secinvgammadot"
         field_name = "velocity"
         field_level = 0
         coef = 0.5
         power = 0.5
      END MODULE FE_Parameter#secinvgamma
   END MODULE FE_SetOfParameters
   
   
///////////////////////////////////////////////////////////////////
   // One Step Iteration Stage
///////////////////////////////////////////////////////////////////
   MODULE FE_OneStepIteration
      concrete_name = "FE_SplitSystem"
      MODULE list_of_FE_OneStepIteration
         
///////////////////////////////////////////////////////////////////
         // Advection Diffusion
///////////////////////////////////////////////////////////////////
         MODULE FE_OneStepIteration#concentration
            concrete_name = "MY_AdvectionDiffusion"
            AD_unknown_field="CC" 
            AD_coeff_diffusion="diffusivityPhase"
            AD_coeff_unsteady ="density" 
            AD_param_source="sourcePhase"
            
            MODULE convective_scheme
               concrete_name = "MY_MUSCL_Scheme"
               AD_param_advective_velocity="velocity"
               AD_coeff_unsteady ="density" 
            END MODULE convective_scheme
            
            MODULE LA_Matrix
               concrete_name = "LA_PelMatrix"
            END MODULE LA_Matrix
            MODULE LA_Solver
               concrete_name = "LA_PreconditionedSolver"
               MODULE LA_IterativeSolver
                  concrete_name = "LA_GMRES_IS"
                  nb_iterations_max = 2000
                  restart = 50
                  MODULE LA_ConvergenceTest
                     concrete_name = "LA_DefaultConvergenceTest"
                     relative_tolerance = 1.e-12
                     absolute_tolerance = 1.e-20
                  END MODULE LA_ConvergenceTest
                  verbose = false
               END MODULE LA_IterativeSolver
               MODULE LA_Preconditioner
                  concrete_name = "LA_Jacobi_PC"
                  smallest_inverted_item = 1.e-20
               END MODULE LA_Preconditioner
            END MODULE LA_Solver
            
         END MODULE FE_OneStepIteration#concentration
         
////////////////////////////////////////////////////////////////////////
         // FE_OeStepIteration: Navier Stokes Solver
         // Optional Modules:
         // - NonlinearTerm -> implement nonlinear viscosity term
         // - advection     -> construction of the advection term
////////////////////////////////////////////////////////////////////////
         MODULE FE_OneStepIteration#Navier_Stokes
            concrete_name = "MI_NavierStokes"         
            viscosity_term = "div_mu_D_uu"
            
            // Nonlinear Term (optional)
            if( $IS_Nonlinear = 1 )
            MODULE NonlinearTerm
               type = "viscosity"
               residual = 1.E-8
               maxiter  = 100
               storage_level = $IS_NONLIN // Make sure that the velocity has enough storage levels
            END MODULE NonlinearTerm
            
            // Discrete Fields
            velocity = "velocity"
            velocity_level_to_update = $IS_CURRENT
            level_of_explicit_velocity = $IS_CURRENT          
            
            pressure = "pp"
            pressure_level_to_update = $IS_CURRENT
            level_of_explicit_pressure = $IS_CURRENT           
            
            quadrature_rule_provider = "GE_QRprovider_5"          
            time_order = 1
            
            //Parameters and advection term 
            param_unsteady = "alpha" 		// Is the equation unsteady 0?1
            param_Reynolds = "Reynolds"		// Reynolds number
            param_viscous  = "Viscosity"	// viscoity term
            param_source   = "ExtForce"     // Source parameter
            
            // Advection term (optional)
            // - replace this with the advective parameter
            if ( $IS_Advection = 1 )
            MODULE advection // -> replace with advective parameter
               MODULE advective_field
                  MODULE xx1
                     field = "velocity"
                     level = $IS_CURRENT
                     param_coef = "alpha"
                  END MODULE xx1
               END MODULE advective_field
            END MODULE advection
            
            
            // Discrete System
            MODULE MI_NavierStokesSystem
               verbose_level = 1
               MODULE method
                  type = "augmented_Lagrangian"
                  augmentation_parameter = 1.0
                  tolerance_on_divergence = 1.e-4
                  tolerance_on_velocity_increment = 5.e-4 
               END MODULE method
               
/////////////////////////////////////////////////////////////////// 
               // Block Assembled System
               // - nb_ranks > 1: PETSC routines
               // - nb_ranks = 1: PEL internal solver
///////////////////////////////////////////////////////////////////
               MODULE LA_Matrix
                  concrete_name = "LA_PelMatrix"
               END MODULE LA_Matrix
               
//               MODULE solver_A
//                  concrete_name = "LA_PreconditionedSolver"
//                  MODULE LA_IterativeSolver
//                     concrete_name = "LA_GMRES_IS"
//                     nb_iterations_max = 10000
//                     restart = 50
//                     MODULE LA_ConvergenceTest
//                        concrete_name = "LA_DefaultConvergenceTest"
//                        relative_tolerance = 1.e-08 // 1.e-8 
//                        absolute_tolerance = 1.E-20
//                     END MODULE LA_ConvergenceTest
//                     verbose = false
//                  END MODULE LA_IterativeSolver
//                  MODULE LA_Preconditioner
//                     concrete_name = "LA_Jacobi_PC"
//                     smallest_inverted_item = 1.e-22
//                  END MODULE LA_Preconditioner
//               END MODULE solver_A
               
               MODULE solver_A
                  concrete_name = "LA_PreconditionedSolver"
                  MODULE LA_IterativeSolver
                     concrete_name = "LA_CG_IS"
                     nb_iterations_max = 10000
                     MODULE LA_ConvergenceTest
                        concrete_name = "LA_DefaultConvergenceTest"
                        relative_tolerance = 1.e-8 //1.e-12
                        absolute_tolerance = 1.E-20
                     END MODULE LA_ConvergenceTest
                     verbose = false
                  END MODULE LA_IterativeSolver
                  MODULE LA_Preconditioner
                     concrete_name = "LA_Jacobi_PC"
                     smallest_inverted_item = 1.e-40
                  END MODULE LA_Preconditioner
               END MODULE solver_A
               
            END MODULE MI_NavierStokesSystem
         END MODULE FE_OneStepIteration#Navier_Stokes
///////////////////////////////////////////////////////////////////
         
///////////////////////////////////////////////////////////////////
         // FE_OneStepIteration: Postprocessing (Parameters)
///////////////////////////////////////////////////////////////////
         MODULE FE_OneStepIteration#parameters_postprocessing
            concrete_name = "FE_ParameterSaver"
            MODULE parameters
               MODULE param#1
                  type = "at_cell_centers"
                  parameter_name = "secinvgammadot"
                  entry_name = "SecInvGammadot"
               END MODULE param#1
               MODULE param#2
                  type = "at_cell_centers"
                  parameter_name = "Reynolds"
                  entry_name = "Reynolds"
               END MODULE param#2
               //MODULE param#3
                  //type = "at_cell_centers"
                  //parameter_name = "Richards"
                  //entry_name = "Richards"
                  //END MODULE param#3
               MODULE param#4
                  type = "at_cell_centers"
                  parameter_name = "Viscosity"
                  entry_name = "viscosity"
               END MODULE param#4
               MODULE param#5
                  type = "at_cell_centers"
                  parameter_name = "ExtForce"
                  entry_name = "ExtForce"
               END MODULE param#5
            END MODULE parameters
         END MODULE FE_OneStepIteration#parameters_postprocessing
///////////////////////////////////////////////////////////////////
         
///////////////////////////////////////////////////////////////////
         // FE_OeStepIteration: FE_DOFsCopy (Setup of the new timestep)
         // - If another solver needs the correct $IS_INITIAL
         //   at the new time step during the execution of
         //   "do_before_inner_iteration_stage", this part has to be
         //   called after the other one step iterations.
///////////////////////////////////////////////////////////////////
         MODULE FE_OneStepIteration#DOF_copy
            concrete_name = "FE_DOFsCopy"
            MODULE uu#1
               field = "velocity"
               source = $IS_INITIAL
               target = $IS_NONLIN
            END MODULE uu#1
            MODULE uu#2
               field = "velocity"
               source = $IS_CURRENT
               target = $IS_INITIAL
            END MODULE uu#2
            MODULE pp#1
               field = "pp"
               source = $IS_INITIAL
               target = $IS_NONLIN
            END MODULE pp#1
            MODULE pp#2
               field = "pp"
               source = $IS_CURRENT
               target = $IS_INITIAL
            END MODULE pp#2
            
         END MODULE FE_OneStepIteration#DOF_copy
///////////////////////////////////////////////////////////////////
         
      END MODULE list_of_FE_OneStepIteration
   END MODULE FE_OneStepIteration
   
END MODULE PEL_Application
