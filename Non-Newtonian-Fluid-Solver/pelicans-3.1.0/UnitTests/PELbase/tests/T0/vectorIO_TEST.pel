MODULE PEL_ObjectTest#vectorIO_TEST
   
   concrete_name = "vectorIO_TEST"
   
   MODULE intVector#0
      type = "intVector"
      exp_to_eval = "< 1 -2 3 4 >"
      result = < 1 -2 3 4 >
   END MODULE intVector#0
   
   MODULE intVector#1
      type = "intVector"
      exp_to_eval = "< 1 2 3                   4 >"
      result = < 1 2 3 4 >
   END MODULE intVector#1
   
   MODULE intVector#2
      type = "intVector"
      exp_to_eval = "1 2 3 4"
      result = < 1 2 3 4 >
      exception = true
   END MODULE intVector#2
   
   MODULE intVector#3
      type = "intVector"
      exp_to_eval = "< 1 2 3 4"
      result = < 1 2 3 4 >
      exception = true
   END MODULE intVector#3
   
   MODULE intVector#4
      type = "intVector"
      exp_to_eval = "< 1 2. 3 4 >"
      result = < 1 2 3 4 >
      exception = true
   END MODULE intVector#4

   MODULE boolVector#0
      type = "boolVector"
      exp_to_eval = "< true true false true >"
      result = < true true false true >
   END MODULE boolVector#0

   MODULE boolVector#1
      type = "boolVector"
      exp_to_eval = " <              true true false true >"
      result = < true true false true >
   END MODULE boolVector#1
   
   MODULE boolVector#2
      type = "boolVector"
      exp_to_eval = "true true false true"
      result = < true true false true >
      exception = true
   END MODULE boolVector#2
   
   MODULE boolVector#3
      type = "boolVector"
      exp_to_eval = "< true true false true"
      result = < true true false true >
      exception = true
   END MODULE boolVector#3
   
   MODULE boolVector#4
      type = "boolVector"
      exp_to_eval = "true true false true >"
      result = < true true false true >
      exception = true
   END MODULE boolVector#4
   
   MODULE boolVector#5
      type = "boolVector"
      exp_to_eval = "true truefalse true >"
      result = < true true false true >
      exception = true
   END MODULE boolVector#5
   
   MODULE size_t_vector#0
      type = "size_t_vector"
      exp_to_eval = "< 1 2 3 4 >"
      result = < 1 2 3 4 >
   END MODULE size_t_vector#0
   
   MODULE size_t_vector#1
      type = "size_t_vector"
      exp_to_eval = "< 1 -2 3 4 >"
      result = < 1 2 3 4 >
      exception = true
   END MODULE size_t_vector#1
   
   MODULE size_t_vector#2
      type = "size_t_vector"
      exp_to_eval = "1 2 3 4"
      result = < 1 2 3 4 >
      exception = true
   END MODULE size_t_vector#2
   
   MODULE size_t_vector#3
      type = "size_t_vector"
      exp_to_eval = "< 1 2 3 4"
      result = < 1 2 3 4 >
      exception = true
   END MODULE size_t_vector#3
   
   MODULE size_t_vector#4
      type = "size_t_vector"
      exp_to_eval = "< 1 2. 3 4 >"
      result = < 1 2 3 4 >
      exception = true
   END MODULE size_t_vector#4
   
   MODULE doubleVector#0
      type = "doubleVector"
      exp_to_eval = "< 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. >"
      result = < 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. >
   END MODULE doubleVector#0
   
   MODULE doubleVector#1
      type = "doubleVector"
      exp_to_eval = "< 1. -2. 3. 4.33333333333333E2 >"
      result = < 1. -2. 3. 433.333333333333 >
      dbl_epsilon = 1.e-6
      dbl_minimal = 1.e-8
   END MODULE doubleVector#1
   
   MODULE doubleVector#2
      type = "doubleVector"
      exp_to_eval = "1. 2. 3. 4."
      result = < 1. 2. 3. 4. >
      exception = true
   END MODULE doubleVector#2
   
   MODULE doubleVector#3
      type = "doubleVector"
      exp_to_eval = "< 1. 2. 3. 4."
      result = < 1. 2. 3. 4. >
      exception = true
   END MODULE doubleVector#3
   
   MODULE doubleVector#4
      type = "doubleVector"
      exp_to_eval = "< 1. 2 3. 4. >"
      result = < 1. 2. 3. 4. >
   END MODULE doubleVector#4
   
   MODULE doubleVector#5
      type = "doubleVector"
      exp_to_eval = "< 1. true 3. 4. >"
      result = < 1. 2. 3. 4. >
      exception = true
   END MODULE doubleVector#5
   
   MODULE StringVector#0
      type = "stringVector"
      exp_to_eval = "< 'toto' 'tata' >"
      result = < "toto" "tata" >
   END MODULE StringVector#0
   
   MODULE StringVector#1
      type = "stringVector"
      exp_to_eval = "< toto tata >"
      result = < "toto" "tata" >
      exception = true
   END MODULE StringVector#1
   
   MODULE StringVector#2
      type = "stringVector"
      exp_to_eval = "'toto' 'tata'"
      result = < "toto" "tata" >
      exception = true
   END MODULE StringVector#2

   MODULE StringVector#3
      type = "stringVector"
      exp_to_eval = "< 'toto' 1. 'tata' >"
      result = < "toto" "tata" >
      exception = true
   END MODULE StringVector#3
   
END MODULE PEL_ObjectTest#vectorIO_TEST
