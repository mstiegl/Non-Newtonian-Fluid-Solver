MODULE PEL_Application
   
   concrete_name = "FE_StepByStepProgression"

   // Fluid Parameters:
   $DS_Re  = 1.
   $DS_Bn = 1.
   $DS_HBn = 0.9
   $DS_kappa = 1. // viscosity ratio

   $DS_dPdL = 10.
   $DS_Length = 1.
   $DS_Aug = 1.
   
   // Time Stepping
   $DS_DT = 0.5
   $DS_TEND = 4.
   $IS_ORDER = 1
   
   // Field Level for time dependent fields
   $IS_CURRENT = 0 // storage of the current field
   // $IS_CURRENT + $IS_ORDER number of levels will be reserved
   // to store the previous time steps
   $IS_VISCOPLASTIC = $IS_CURRENT + $IS_ORDER + 1
   // Use the next available slot for the viscoplastic iteration
   
   
   // Boolean Switches -> replace by $IB_???
   $IS_SteadyStateAdaptor = 0 // Apply steady state break critereon
   $IS_Advection = 0 // Consider advection term: 0 false, 1 true

   $SS_SolverType = "UMFPACK" // Candidates: UMFPACK, LA_PELSolver
//   $SS_Grid = "TRIANGLE" // Candidates: RECTANGLE, TRIANGLE
   $SS_Grid = "RECTANGLE" // Candidates: RECTANGLE, TRIANGLE

   MODULE FE_TimeIterator
      time_initial = 0.0
      time_end = $DS_TEND
      time_step = $DS_DT 
   END MODULE FE_TimeIterator
   
   if( $IS_SteadyStateAdaptor = 1 )
   MODULE FE_TimeIteratorAdapter
      // Stop when :
      //   max( u_current-u_initial )/max( u_current, 1. ) < 1.E-5	
      //   max( p_current-p_initial )/max( p_current, 1. ) < 1.E-5
      concrete_name = "FE_SteadyStateAdapter"
      initial_level = $IS_NONLIN
      current_level = $IS_CURRENT
      discrete_fields = < "uu" >
      minimal_error = < 1.E-5 >
      MODULE post_processing
         banner = true
         file_name = "convergence.txt"
      END MODULE post_processing
   END MODULE FE_TimeIteratorAdapter
   
   graphics_output_times = regular_vector( 1., 8, $DS_TEND )
   
   
//////////////////////////////////////////////////////////////////
   // PDE_DomainAndFields
//////////////////////////////////////////////////////////////////
   MODULE PDE_DomainAndFields
      verbose_level = 1
      nb_space_dimensions = 2
      type = "finite_element"
      
//////////////////////////////////////////////////////////////
      // Define meshing
      // - no splitting if in sequential mode
      // - automatic splitting using METIS if in true parallel mode
//////////////////////////////////////////////////////////////
      if( $SS_Grid = "RECTANGLE" )
      MODULE GE_Meshing
         concrete_name = "GE_BoxWithBoxes"
         vertices_coordinate_0 = regular_vector( 0.0, 20, $DS_Length )
         vertices_coordinate_1 = regular_vector( 0.0, 10, 0.5 )
         mesh_polyhedron = < "GE_Segment" "GE_Rectangle" >
      END MODULE GE_Meshing
      
      if( $SS_Grid = "TRIANGLE" )
      MODULE GE_Meshing
         concrete_name = "GE_RefinedMeshing"
         mesh_polyhedron = < "GE_Segment" "GE_Triangle" >
         MODULE list_of_GE_ReferencePolyhedronRefiner
            MODULE GE_ReferencePolyhedronRefiner#1
               concrete_name = "GE_ReferenceSquareWithTriangles"
               strategy = "X"
            END MODULE GE_ReferencePolyhedronRefiner#1
         END MODULE list_of_GE_ReferencePolyhedronRefiner
         MODULE GE_Meshing
            concrete_name = "GE_BoxWithBoxes"
            vertices_coordinate_0 = regular_vector( 0.0, 10, $DS_Length )
            vertices_coordinate_1 = regular_vector( 0.0, 5, 0.5 )
            mesh_polyhedron = < "GE_Segment" "GE_Rectangle" >
         END MODULE GE_Meshing
      END MODULE GE_Meshing
///////////////////////////////////////////////////////////////////
 
      MODULE macro_colors
         symmetry_x = < "left" "right" "bottom_left" "bottom_right">
         symmetry_y = < "bottom" "bottom_left" "bottom_right">
         no_slip = < "top" "top_left" "top_right">
      END MODULE macro_colors
      
      MODULE interior_fields
         if( $SS_Grid = "TRIANGLE" )
         MODULE uu
            name = "uu"
            nb_components = 2
            element_name = "PDE_2D_P2_6nodes"
            storage_depth = 3
            MODULE DOFs_values
               type = "uniformly_defined"
               value = vector( 0.0, 0.0 )
            END MODULE DOFs_values
            MODULE DOFs_imposed_value
               MODULE Dirichlet
                  location = "on_bounds"
                  type = "uniformly_defined"
                  color = "no_slip"
                  value = vector( 0.0, 0.0 )
               END MODULE Dirichlet
               MODULE XSymmetry
                  location = "on_bounds"
                  color = "symmetry_x"
                  component = 1
                  type = "uniformly_defined"
                  value = < 0.0 >
               END MODULE XSymmetry
               MODULE YSymmetry
                  location = "on_bounds"
                  color = "symmetry_y"
                  component = 1
                  type = "uniformly_defined"
                  value = < 0.0 >
               END MODULE YSymmetry
            END MODULE DOFs_imposed_value
         END MODULE uu
         
         if( $SS_Grid = "RECTANGLE" )
         MODULE uu
            name = "uu"
            nb_components = 2
//            element_name = "PDE_2D_Q2_9nodes"
            element_name = "PDE_2D_Q1_4nodes"
            storage_depth = 3
            MODULE DOFs_values
               type = "uniformly_defined"
               value = vector( 0.0, 0.0 )
            END MODULE DOFs_values
            MODULE DOFs_imposed_value
               MODULE Dirichlet
                  location = "on_bounds"
                  type = "uniformly_defined"
                  color = "no_slip"
                  value = vector( 0.0, 0.0 )
               END MODULE Dirichlet
               MODULE XSymmetry
                  location = "on_bounds"
                  color = "symmetry_x"
                  component = 1
                  type = "uniformly_defined"
                  value = < 0.0 >
               END MODULE XSymmetry
               MODULE YSymmetry
                  location = "on_bounds"
                  color = "symmetry_y"
                  component = 1
                  type = "uniformly_defined"
                  value = < 0.0 >
               END MODULE YSymmetry
            END MODULE DOFs_imposed_value
         END MODULE uu
         
         if( $SS_Grid = "TRIANGLE" )
         MODULE pp
            name = "pp"
            nb_components = 1
            element_name = "PDE_2D_P1_3nodes"
            storage_depth = 2
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0.0 >
            END MODULE DOFs_values
            MODULE DOFs_imposed_value
               MODULE Dirichlet
                  location = "on_bounds"
                  type = "uniformly_defined"
                  color = "symmetry_x"
                  value = vector( 0.0 )
               END MODULE Dirichlet
            END MODULE DOFs_imposed_value
         END MODULE pp
         if( $SS_Grid = "RECTANGLE" )
         MODULE pp
            name = "pp"
            nb_components = 1
//            element_name = "PDE_2D_Q1_4nodes"
            element_name = "PDE_2D_Q0_1node"
            storage_depth = 2
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0.0 >
            END MODULE DOFs_values
            MODULE DOFs_imposed_value
               MODULE Dirichlet
                  location = "on_bounds"
                  type = "uniformly_defined"
                  color = "symmetry_x"
                  value = vector( 0.0 )
               END MODULE Dirichlet
            END MODULE DOFs_imposed_value
         END MODULE pp

         if( $SS_Grid = "TRIANGLE" )
         MODULE strainrate
            name = "gammadot"
            nb_components = 3
            element_name = "PDE_2D_P0isoP2_4nodes"
            storage_depth = 1
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0. 0. 0. >
            END MODULE DOFs_values
         END MODULE strainrate
         if( $SS_Grid = "RECTANGLE" )
         MODULE strainrate
            name = "gammadot"
            nb_components = 3
            element_name = "PDE_2D_Q0_1node"
            storage_depth = 1
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0. 0. 0. >
            END MODULE DOFs_values
         END MODULE strainrate         

         if( $SS_Grid = "TRIANGLE" )
         MODULE relaxedstrainrate
            name = "gamma"
            nb_components = 3
            element_name = "PDE_2D_P0isoP2_4nodes"
            storage_depth = 1
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0. 0. 0. >
            END MODULE DOFs_values
         END MODULE relaxedstrainrate
         if( $SS_Grid = "RECTANGLE" )
         MODULE relaxedstrainrate
            name = "gamma"
            nb_components = 3
            element_name = "PDE_2D_Q0_1node"
            storage_depth = 1
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0. 0. 0. >
            END MODULE DOFs_values
         END MODULE relaxedstrainrate

         if( $SS_Grid = "TRIANGLE" )
         MODULE stress
            name = "stress"
            nb_components = 3
            element_name = "PDE_2D_P0isoP2_4nodes"
            storage_depth = 1
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0. 0. 0. >
            END MODULE DOFs_values
         END MODULE stress
         if( $SS_Grid = "RECTANGLE" )
         MODULE stress
            name = "stress"
            nb_components = 3
            element_name = "PDE_2D_Q0_1node"
            storage_depth = 1
            MODULE DOFs_values
               type = "uniformly_defined"
               value = < 0. 0. 0. >
            END MODULE DOFs_values
         END MODULE stress

      END MODULE interior_fields
      
      MODULE PDE_ResultSaver
         writers = < "PEL_VTKwriter" >
         writing_mode = "text"
         files_basename = "save"
         MODULE uu
            where_to_save = "at_vertices"
            entry_name = "UU"
            field = "uu"
         END MODULE uu
         MODULE pp
            where_to_save = "at_vertices"
            entry_name = "PP"
            field = "pp"
         END MODULE pp
         MODULE gammadot
            where_to_save = "at_cell_centers"
            entry_name = "GAMMADOT"
            field = "gammadot"
         END MODULE gammadot
         MODULE gamma
            where_to_save = "at_cell_centers"
            entry_name = "GAMMA"
            field = "gamma"
         END MODULE gamma
         MODULE stress
            where_to_save = "at_cell_centers"
            entry_name = "STRESS"
            field = "stress"
         END MODULE stress
      END MODULE PDE_ResultSaver
   END MODULE PDE_DomainAndFields
   
///////////////////////////////////////////////////////////////////
   // FE_Parameters
///////////////////////////////////////////////////////////////////
   MODULE FE_SetOfParameters
      alpha = < 0.0 >              // Advection and time terms ???
      Reynolds = vector( $DS_Re )  // Reynolds number
      pressuredrop = vector( $DS_dPdL, 0. )
      consistency=<1.0>

      MODULE FE_Parameter#Bn
         concrete_name = "FE_UniformParameter"
         name = "Bn"
         value = vector( $DS_Bn )
      END MODULE FE_Parameter#Bn

      MODULE FE_Parameter#HB_n
         concrete_name = "FE_UniformParameter"
         name = "HB_n"
         value = vector( $DS_HBn )
      END MODULE FE_Parameter#HB_n
      
      MODULE FE_Parameter#secinvgamma
         concrete_name = "FE_DuDuFieldParameter"
         name = "secinvgammadot"
         field_name = "uu"
         field_level = 0
         coef = 0.5
         power = 0.5
      END MODULE FE_Parameter#secinvgamma
   END MODULE FE_SetOfParameters
   
///////////////////////////////////////////////////////////////////
   // One Step Iteration Stage
///////////////////////////////////////////////////////////////////
   MODULE FE_OneStepIteration
      concrete_name = "FE_SplitSystem"
      MODULE list_of_FE_OneStepIteration
         
///////////////////////////////////////////////////////////////////
         // FE_OeStepIteration: Navier Stokes Solver
         // Optional Modules:
         // - NonlinearTerm -> implement nnlinear viscosity term
         // - advection     -> construction of the advection term
///////////////////////////////////////////////////////////////////
         MODULE FE_OneStepIteration#Navier_Stokes
            concrete_name = "ML_NavierStokes" 
            viscosity_term = "div_mu_D_uu"
            
            // Viscoplastic Term
            MODULE ViscoplasticTerm
//               type          = "Bingham" // Supported constitutive laws: Bingham, HerschelBulkley
               type          = "HerschelBulkley" 
               maxiter       = 30       // Maximum number of augmented Lagrangian steps
               residual      = 1.e-4      // Maximum H1 equivalent residual
               storage_level = $IS_VISCOPLASTIC   // Storage level of the velocity for convergence
               augmentation  = $DS_Aug        // Augmentation parameter
            END MODULE ViscoplasticTerm
                       
            // Discrete Fields
            velocity = "uu"
            velocity_level_to_update = $IS_CURRENT
            level_of_explicit_velocity = $IS_CURRENT          
            
            pressure = "pp"
            pressure_level_to_update = $IS_CURRENT
            level_of_explicit_pressure = $IS_CURRENT           
            
            gammadot = "gammadot"
            gamma = "gamma"
            stress = "stress"
            
            quadrature_rule_provider = "GE_QRprovider_7"
            time_order = 1
            
            //Parameters and advection term 
            param_unsteady = "alpha" 		// Is the equation unsteady 0?1
            param_Reynolds = "Reynolds"		// Reynolds number
            param_Bingham  = "Bn"               // viscosity term
            param_source   = "pressuredrop"     // Source parameter
            param_consistency="consistency"
            param_Herschel_coef = "HB_n"        // 
            
            // Advection term (optional)
            // - replace this with the advective parameter
            if ( $IS_Advection = 1 )
            MODULE advection // -> replace with advective parameter
               MODULE advective_field
                  MODULE xx1
                     field = "uu"
                     level = $IS_CURRENT
                     param_coef = "alpha"
                  END MODULE xx1
               END MODULE advective_field
            END MODULE advection
            
            // Discrete System
            MODULE ML_NavierStokesSystem
               verbose_level = 1
               MODULE method
                  type = "augmented_Lagrangian"
                  augmentation_parameter = 10000.
                  tolerance_on_divergence = 1.e-8	
                  tolerance_on_velocity_increment = 1.e-8
               END MODULE method

///////////////////////////////////////////////////////////////////               
               // Block Assembled System
               // - nb_ranks > 1: PETSC routines
               // - nb_ranks = 1: PEL internal solver
///////////////////////////////////////////////////////////////////
               MODULE LA_Matrix
                  concrete_name = "LA_PelMatrix"
               END MODULE LA_Matrix
               
//               MODULE solver_A
//                  concrete_name = "LA_PreconditionedSolver"
//                  MODULE LA_IterativeSolver
//                     concrete_name = "LA_GMRES_IS"
//                     nb_iterations_max = 10000
//                     restart = 50
//                     MODULE LA_ConvergenceTest
//                        concrete_name = "LA_DefaultConvergenceTest"
//                        relative_tolerance = 1.e-08 // 1.e-8 
//                        absolute_tolerance = 1.E-20
//                     END MODULE LA_ConvergenceTest
//                     verbose = false
//                  END MODULE LA_IterativeSolver
//                  MODULE LA_Preconditioner
//                     concrete_name = "LA_Jacobi_PC"
//                     smallest_inverted_item = 1.e-22
//                  END MODULE LA_Preconditioner
//               END MODULE solver_A
               
               if( $SS_SolverType = " LA_PELSolver")                   
               MODULE solver_A
                  concrete_name = "LA_PreconditionedSolver"
                  MODULE LA_IterativeSolver
                     concrete_name = "LA_CG_IS"
                     nb_iterations_max = 10000
                     MODULE LA_ConvergenceTest
                        concrete_name = "LA_DefaultConvergenceTest"
                        relative_tolerance = 1.e-8 //1.e-12
                        absolute_tolerance = 1.E-20
                     END MODULE LA_ConvergenceTest
                     verbose = false
                  END MODULE LA_IterativeSolver
                  MODULE LA_Preconditioner
                     concrete_name = "LA_Jacobi_PC"
                     smallest_inverted_item = 1.e-40
                  END MODULE LA_Preconditioner
               END MODULE solver_A
               
               if( $SS_SolverType = "UMFPACK") 
               MODULE solver_A
                  concrete_name = "EXT_UMFsolver_DS"
               END MODULE solver_A
            END MODULE ML_NavierStokesSystem
         END MODULE FE_OneStepIteration#Navier_Stokes
///////////////////////////////////////////////////////////////////
         
///////////////////////////////////////////////////////////////////
         // FE_OneStepIteration: Postprocessing (Parameters)
///////////////////////////////////////////////////////////////////
         MODULE FE_OneStepIteration#parameters_postprocessing
            concrete_name = "FE_ParameterSaver"
            MODULE parameters
               MODULE param#1
                  type = "at_cell_centers"
                  parameter_name = "secinvgammadot"
                  entry_name = "SecInvGammadot"
               END MODULE param#1
               MODULE param#2
                  type = "at_cell_centers"
                  parameter_name = "Reynolds"
                  entry_name = "Reynolds"
               END MODULE param#2
               MODULE param#3
                  type = "at_cell_centers"
                  parameter_name = "pressuredrop"
                  entry_name = "pressuredrop"
               END MODULE param#3
            END MODULE parameters
         END MODULE FE_OneStepIteration#parameters_postprocessing
         
      END MODULE list_of_FE_OneStepIteration
   END MODULE FE_OneStepIteration
   
END MODULE PEL_Application
