$DS_u = 1.0/3.0 + 0.24091971
MODULE var1
   type = "Double"
   exp_to_eval = d( $DS_u , "DS_y" )
   result = 0.0
END MODULE var1
MODULE var1_0
   type = "Double"
   $DS_tarthampion = 3.14
   exp_to_eval = d( $DS_u , "DS_tarthampion" )
   result = 0.0
END MODULE var1_0
MODULE dnumvar1
   type = "Double"
   exp_to_eval = dnum( $DS_u , "DS_y" )
   $DS_y=1.0
   result = 0.0
END MODULE dnumvar1
MODULE var2
   type = "Double"
   exp_to_eval = d( $DS_u , "DS_u" )
   result = 1.0
END MODULE var2
MODULE dnumvar2
   type = "Double"
   exp_to_eval = dnum( $DS_u , "DS_u" )
   result = 1.0
   relative_precision = 1.0e-8
END MODULE dnumvar2
MODULE product
   type = "Double"
   exp_to_eval = d( 2.0*$DS_u , "DS_u" )
   result = 2.0
END MODULE product
MODULE sum
   type = "Double"
   exp_to_eval = d( $DS_u + $DS_u  , "DS_u" )
   result = 2.0
END MODULE sum
MODULE minus
   type = "Double"
   exp_to_eval = d( -$DS_u  , "DS_u" )
   result = -1.0
END MODULE minus
MODULE less
   type = "Double"
   exp_to_eval = d( $DS_u - 1.0  , "DS_u" )
   result = 1.0
END MODULE less
MODULE div
   type = "Double"
   exp_to_eval = d( $DS_u /( 1.0 + $DS_u )  , "DS_u" )
   result = 1.0/sqr( 1.0 + $DS_u )
END MODULE div
MODULE sqr
   type = "Double"
   exp_to_eval = d( sqr( 2.0*$DS_u )  , "DS_u" )
   result = 8.0*$DS_u
END MODULE sqr
MODULE sqrt
   type = "Double"
   exp_to_eval = d( sqrt( 4.0*$DS_u )  , "DS_u" )
   result = 1.0/sqrt($DS_u)
END MODULE sqrt
MODULE dnumlog
   type = "Double"
   exp_to_eval = d( log( 2.0*$DS_u )  , "DS_u" )
   result = dnum( log( 2.0*$DS_u )  , "DS_u" )
   relative_precision = 1.0e-8
END MODULE dnumlog
MODULE sin
   type = "Double"
   exp_to_eval = d( sin( 2.0*$DS_u )  , "DS_u" )
   result = 2.0*cos(2.0*$DS_u)
END MODULE sin
MODULE dnumsin
   type = "Double"
   exp_to_eval = dnum( sin( 2.0*$DS_u )  , "DS_u" )
   result = d( sin( 2.0*$DS_u )  , "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumsin
MODULE cos
   type = "Double"
   exp_to_eval = d( cos( 2.0*$DS_u )  , "DS_u" )
   result = -2.0*sin(2.0*$DS_u)
END MODULE cos
MODULE dnumcos
   type = "Double"
   exp_to_eval = dnum( cos( 2.0*$DS_u )  , "DS_u" )
   result = d( cos( 2.0*$DS_u )  , "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumcos
MODULE dpow
   type = "Double"
   exp_to_eval = d( pow( 3.0*$DS_u , 2.0*$DS_u+1.0 ) , "DS_u" )
   result = 2.0*log(3.0*$DS_u)*pow( 3.0*$DS_u , 2.0*$DS_u+1.0 )
   + ( 2.0*$DS_u+1.0 )*3.0*pow( 3.0*$DS_u , 2.0*$DS_u )
END MODULE dpow
MODULE dnumpow
   type = "Double"
   exp_to_eval = dnum( pow( 3.0*$DS_u , 2.0*$DS_u+1.0 ) , "DS_u" )
   result = d( pow( 3.0*$DS_u , 2.0*$DS_u+1.0 ) , "DS_u" )
   relative_precision = 1.0e-6
END MODULE dnumpow
MODULE dtan
   type = "Double"
   exp_to_eval = d( tan( 3.0*$DS_u ), "DS_u" )
   result = 3.0/sqr(cos( 3.0*$DS_u ))
END MODULE dtan
MODULE dasin
   type = "Double"
   exp_to_eval = d( asin( 0.5*$DS_u ), "DS_u" )
   result = 0.5/sqrt(1.0-sqr(0.5*$DS_u ))
END MODULE dasin
MODULE dacos
   type = "Double"
   exp_to_eval = d( acos( 0.5*$DS_u ), "DS_u" )
   result = -0.5/sqrt(1.0-sqr(0.5*$DS_u ))
END MODULE dacos
MODULE datan
   type = "Double"
   exp_to_eval = d( atan( 0.5*$DS_u ), "DS_u" )
   result = 0.5/(1.0+sqr(0.5*$DS_u ))
END MODULE datan
MODULE dsinh
   type = "Double"
   exp_to_eval = d( sinh( 0.5*$DS_u ), "DS_u" )
   result = 0.5*cosh( 0.5*$DS_u )
END MODULE dsinh
MODULE dcosh
   type = "Double"
   exp_to_eval = d( cosh( 0.5*$DS_u ), "DS_u" )
   result = 0.5*sinh( 0.5*$DS_u )
END MODULE dcosh
MODULE dtanh
   type = "Double"
   exp_to_eval = d( tanh( 0.5*$DS_u ), "DS_u" )
   result = 0.5/sqr(cosh(0.5*$DS_u ))
END MODULE dtanh
MODULE derf
   type = "Double"
   exp_to_eval = d( erf( 0.5*$DS_u ), "DS_u" )
   result = 1.0*exp(-sqr(0.5*$DS_u ))/sqrt(pi())
END MODULE derf
MODULE derfc
   type = "Double"
   exp_to_eval = d( erfc( 0.5*$DS_u ), "DS_u" )
   result = -1.0*exp(-sqr(0.5*$DS_u ))/sqrt(pi())
END MODULE derfc
MODULE dasinh
   type = "Double"
   exp_to_eval = d( asinh( 0.5*$DS_u ), "DS_u" )
   result = 0.5/sqrt(1.0+sqr(0.5*$DS_u ))
END MODULE dasinh
MODULE dacosh
   type = "Double"
   exp_to_eval = d( acosh( 2.0*$DS_u ), "DS_u" )
   result = 2.0/sqrt(sqr(2.0*$DS_u )-1.0)
END MODULE dacosh
MODULE datanh
   type = "Double"
   exp_to_eval = d( atanh( 0.5*$DS_u ), "DS_u" )
   result = 0.5/(1.0-sqr(0.5*$DS_u ))
END MODULE datanh

MODULE dnumtan
   type = "Double"
   exp_to_eval = dnum( tan( 3.0*$DS_u ), "DS_u" )
   result = d( tan( 3.0*$DS_u ), "DS_u" )
   relative_precision = 1.0e-6
END MODULE dnumtan
MODULE dnumasin
   type = "Double"
   exp_to_eval = dnum( asin( 0.5*$DS_u ), "DS_u" )
   result = d( asin( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-8
END MODULE dnumasin
MODULE dnumacos
   type = "Double"
   exp_to_eval = dnum( acos( 0.5*$DS_u ), "DS_u" )
   result = d( acos( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-6
END MODULE dnumacos
MODULE dnumatan
   type = "Double"
   exp_to_eval = dnum( atan( 0.5*$DS_u ), "DS_u" )
   result = d( atan( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-8
END MODULE dnumatan
MODULE dnumsinh
   type = "Double"
   exp_to_eval = dnum( sinh( 0.5*$DS_u ), "DS_u" )
   result = d( sinh( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumsinh
MODULE dnumcosh
   type = "Double"
   exp_to_eval = dnum( cosh( 0.5*$DS_u ), "DS_u" )
   result = d( cosh( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumcosh
MODULE dnumtanh
   type = "Double"
   exp_to_eval = dnum( tanh( 0.5*$DS_u ), "DS_u" )
   result = d( tanh( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumtanh
MODULE dnumerf
   type = "Double"
   exp_to_eval = dnum( erf( 0.5*$DS_u ), "DS_u" )
   result = d( erf( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-8
END MODULE dnumerf
MODULE dnumerfc
   type = "Double"
   exp_to_eval = dnum( erfc( 0.5*$DS_u ), "DS_u" )
   result = d( erfc( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-8
END MODULE dnumerfc
MODULE dnumasinh
   type = "Double"
   exp_to_eval = dnum( asinh( 0.5*$DS_u ), "DS_u" )
   result = d( asinh( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumasinh
MODULE dnumacosh
   type = "Double"
   exp_to_eval = dnum( acosh( 2.0*$DS_u ), "DS_u" )
   result = d( acosh( 2.0*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumacosh
MODULE dnumatanh
   type = "Double"
   exp_to_eval = dnum( atanh( 0.5*$DS_u ), "DS_u" )
   result = d( atanh( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumatanh

MODULE d2
   type = "Double"
   exp_to_eval = d( 2.0 * d( sqr($DS_u), "DS_u" ) , "DS_u" )
   result = 4.0
END MODULE d2
MODULE component_der
   type = "Double"
   exp_to_eval = d( component( vector( $DS_u,1.0) , 0 ) , "DS_u" )
   result = 1.0
END MODULE component_der
MODULE dv_der
   type = "DoubleVector"
   exp_to_eval = d(< 0. 1. > , "DS_u" )
   result = < 0. 0. >
END MODULE dv_der
MODULE exp_der
   type = "Double"
   exp_to_eval = d( exp(-$DS_u) , "DS_u" )
   result = -exp(-$DS_u)
END MODULE exp_der

MODULE exp_ifthenelse
   type = "Double"
   exp_to_eval = d( ( $DS_u<0.0 ? -$DS_u : $DS_u ) , "DS_u" )
   result = ( $DS_u<0.0 ? -1.0 : 1.0 )
END MODULE exp_ifthenelse

MODULE dnumEn#0
   type = "Double"
   $IS_N = 3
   exp_to_eval = dnum( En( $IS_N, 0.5*$DS_u ), "DS_u" )
   result = d( En( $IS_N, 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumEn#0

MODULE dnumEn#1
   type = "Double"
   $IS_N = 0
   exp_to_eval = dnum( En( $IS_N, 0.5*$DS_u ), "DS_u" )
   result = d( En( $IS_N, 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-6
END MODULE dnumEn#1

MODULE dnumEn#2
   type = "Double"
   $IS_N = 6
   exp_to_eval = dnum( En( $IS_N, 0.5*$DS_u, 1.E-30, 1.E-7, 200 ), "DS_u" )
   result = d( En( $IS_N, 0.5*$DS_u, 1.E-30, 1.E-7, 200 ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumEn#2

MODULE dnumEi#0
   type = "Double"
   exp_to_eval = dnum( Ei( 0.5*$DS_u ), "DS_u" )
   result = d( Ei( 0.5*$DS_u ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumEi#0

MODULE dnumEi#1
   type = "Double"
   exp_to_eval = dnum( Ei( 0.5*$DS_u, 1.E-30, 1.E-7, 200 ), "DS_u" )
   result = d( Ei( 0.5*$DS_u, 1.E-30, 1.E-7, 200 ), "DS_u" )
   relative_precision = 1.0e-7
END MODULE dnumEi#1
