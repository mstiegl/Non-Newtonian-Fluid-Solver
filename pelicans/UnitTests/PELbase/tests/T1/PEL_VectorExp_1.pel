MODULE PEL_ObjectTest#PEL_Expression_TEST

   MODULE apply_DV#0
      type = "DoubleVector"
      result = < 1. 4. 9. 16. >
      $DV_S = < 1. 2. 3. 4. >
      exp_to_eval = apply( $DV_S, $DS_x*$DS_x, "DS_x" )
   END MODULE apply_DV#0
   
   MODULE apply_DV#1
      type = "DoubleVector"
      result = < 1. 4. 9. 16. >
      $DV_S = < 1. 2. 3. 4. >
      $DS_x = 0. // not used ?
      exp_to_eval = apply( $DV_S, $DS_x*$DS_x, "DS_x" )
   END MODULE apply_DV#1
   
   MODULE apply_DV#2
      type = "DoubleVector"
      result = nvector( 4, pi() )
      $DV_S = < 1. 2. 3. 4. >
      $DS_v = pi()
      exp_to_eval = apply( $DV_S, $DS_v, "DS_x" )
   END MODULE apply_DV#2
   
   MODULE apply_DV#3
      type = "DoubleVector"
      result = < 1. 4. 27. 256. >
      $DV_S = < 1. 2. 3. 4. >
      exp_to_eval = apply( $DV_S, pow( $DS_x, double($IS_ic+1) ), "DS_x", "IS_ic" )
   END MODULE apply_DV#3
   
   MODULE apply_IV#0
      type = "IntVector"
      result = < 1 4 9 16 >
      $IV_S = < 1 2 3 4 >
      exp_to_eval = apply( $IV_S, $IS_x*$IS_x, "IS_x" )
   END MODULE apply_IV#0

   MODULE apply_IV#1
      type = "IntVector"
      result = < 1 4 9 16 >
      $IV_S = < 1 2 3 4 >
      $IS_x = 0 // not used ?
      exp_to_eval = apply( $IV_S, $IS_x*$IS_x, "IS_x" )
   END MODULE apply_IV#1
   
   MODULE apply_IV#2
      type = "IntVector"
      result = < 0 2 6 12 >
      $IV_S = < 1 2 3 4 >
      exp_to_eval = apply( $IV_S, $IS_x*$IS_ic, "IS_x", "IS_ic" )
   END MODULE apply_IV#2
   
   MODULE apply_BV#0
      type = "BoolVector"
      result = < false false true >
      $BV_S = < true true false >
      exp_to_eval = apply( $BV_S, ! $BS_x, "BS_x" )
   END MODULE apply_BV#0
   
   MODULE apply_SV#0
      type = "StringVector"
      result = < "apply(titi)" "apply(toto)" "apply(tutu)">
      $SV_S = < "titi" "toto" "tutu" >
      exp_to_eval = apply( $SV_S, "apply("+$SS_x+")", "SS_x" )
   END MODULE apply_SV#0
   
   MODULE apply_SV#1
      type = "StringVector"
      result = < "titi0" "toto1" "tutu2" >
      $SV_S = < "titi" "toto" "tutu" >
      exp_to_eval = apply( $SV_S, $SS_x+to_string($IS_ic), "SS_x", "IS_ic" )
   END MODULE apply_SV#1
   
END MODULE PEL_ObjectTest#PEL_Expression_TEST
